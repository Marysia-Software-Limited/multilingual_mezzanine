{"swagger": "2.0", "info": {"title": "Snippets API", "description": "Test description", "termsOfService": "https://www.google.com/policies/terms/", "contact": {"email": "contact@snippets.local"}, "license": {"name": "BSD License"}, "version": "v1"}, "host": "127.0.0.1:8000", "schemes": ["http"], "basePath": "/en/api", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/categories": {"get": {"operationId": "categories_list", "description": "parameters:\n        - name: search\n          type: string\n          description: Search for category names that match the query\n          paramType: query\n        - name: page\n          type: integer\n          description: Page number\n          paramType: query", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Category"}}}}}}, "tags": ["categories"]}, "post": {"operationId": "categories_create", "description": "For listing, retrieving, creating or updating blog categories.\n---", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Category"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Category"}}}, "tags": ["categories"]}, "parameters": []}, "/categories/{id}": {"get": {"operationId": "categories_read", "description": "For listing, retrieving, creating or updating blog categories.\n---", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Category"}}}, "tags": ["categories"]}, "put": {"operationId": "categories_update", "description": "For listing, retrieving, creating or updating blog categories.\n---", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Category"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Category"}}}, "tags": ["categories"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Blog Category.", "required": true, "type": "integer"}]}, "/docs/": {"get": {"operationId": "docs_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "produces": ["application/coreapi+json", "application/openapi+json"], "tags": ["docs"]}, "parameters": []}, "/pages": {"get": {"operationId": "pages_list", "description": "parameters:\n        - name: page\n          type: integer\n          description: Page number\n          paramType: query", "parameters": [{"name": "title", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Page"}}}}}}, "tags": ["pages"]}, "parameters": []}, "/pages/{id}": {"get": {"operationId": "pages_read", "description": "For listing or retrieving pages.\n---", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Page"}}}, "tags": ["pages"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Page.", "required": true, "type": "integer"}]}, "/posts": {"get": {"operationId": "posts_list", "description": "parameters:\n        - name: category_id\n          type: integer\n          description: Filter posts by category ID\n          paramType: query\n        - name: category_name\n          type: string\n          description: Filter posts by category name\n          paramType: query\n        - name: category_slug\n          type: string\n          description: Filter posts by category slug\n          paramType: query\n        - name: tag\n          type: string\n          description: Filter posts by tag name\n          paramType: query\n        - name: author_id\n          type: integer\n          description: Filter posts by author ID\n          paramType: query\n        - name: author_name\n          type: string\n          description: Filter posts by author's username\n          paramType: query\n        - name: date_min\n          type: datetime\n          description: Filter posts by minimum publish date\n          paramType: query\n        - name: date_max\n          type: datetime\n          description: Filter posts by maximum publish date\n          paramType: query\n        - name: search\n          type: string\n          description: Search for blog posts that match the query\n          paramType: query\n        - name: page\n          type: integer\n          description: Page number\n          paramType: query", "parameters": [{"name": "category_id", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "category_name", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "tag", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "author_id", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "author_name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "date_min", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "date_max", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "category_slug", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/PostOutput"}}}}}}, "tags": ["posts"]}, "post": {"operationId": "posts_create", "description": "For listing, retrieving, creating or updating blog posts.\n---", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PostCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PostCreate"}}}, "tags": ["posts"]}, "parameters": []}, "/posts/{id}": {"get": {"operationId": "posts_read", "description": "For listing, retrieving, creating or updating blog posts.\n---", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PostOutput"}}}, "tags": ["posts"]}, "put": {"operationId": "posts_update", "description": "For listing, retrieving, creating or updating blog posts.\n---", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PostUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PostUpdate"}}}, "tags": ["posts"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Blog post.", "required": true, "type": "integer"}]}, "/site": {"get": {"operationId": "site_list", "description": "For retrieving site title, tagline and domain.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Site"}}}}, "tags": ["site"]}, "parameters": []}, "/users": {"get": {"operationId": "users_list", "description": "parameters:\n        - name: username\n          type: string\n          description: Filter usernames starting with query\n          paramType: query\n        - name: page\n          type: integer\n          description: Page number\n          paramType: query", "parameters": [{"name": "username", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}}}, "tags": ["users"]}, "parameters": []}, "/users/{id}": {"get": {"operationId": "users_read", "description": "For listing or retrieving users.\n---", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["users"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this user.", "required": true, "type": "integer"}]}}, "definitions": {"Category": {"required": ["title"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 500, "minLength": 1}, "slug": {"title": "URL", "description": "Leave blank to have the URL auto-generated from the title.", "type": "string", "maxLength": 2000}}}, "RecursiveField": {"type": "object", "properties": {}}, "ChildPage": {"required": ["title", "children"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 500, "minLength": 1}, "children": {"type": "array", "items": {"$ref": "#/definitions/RecursiveField"}}, "status": {"title": "Status", "description": "With Draft chosen, will only be shown for admin users on the site.", "type": "integer", "enum": [1, 2]}, "_order": {"title": "Order", "type": "integer", "maximum": 2147483647, "minimum": -2147483648, "x-nullable": true}}}, "Page": {"required": ["title", "children"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "parent": {"title": "Parent", "type": "integer", "x-nullable": true}, "title": {"title": "Title", "type": "string", "maxLength": 500, "minLength": 1}, "content": {"title": "Content", "type": "string", "readOnly": true}, "content_model": {"title": "Content model", "type": "string", "readOnly": true, "minLength": 1}, "slug": {"title": "URL", "description": "Leave blank to have the URL auto-generated from the title.", "type": "string", "maxLength": 2000}, "publish_date": {"title": "Published from", "description": "With Published chosen, won't be shown until this time", "type": "string", "format": "date-time", "x-nullable": true}, "login_required": {"title": "Login required", "description": "If checked, only logged in users can view this page", "type": "boolean"}, "meta_description": {"title": "Meta description", "type": "string", "readOnly": true, "minLength": 1}, "tags": {"title": "Tags", "type": "string", "readOnly": true, "minLength": 1}, "gallery_items": {"title": "Gallery items", "type": "string", "readOnly": true}, "children": {"type": "array", "items": {"$ref": "#/definitions/ChildPage"}}, "in_menus": {"title": "Show in menus", "type": "string", "enum": [1, 2, 3], "x-nullable": true}}}, "User": {"required": ["username"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "email": {"title": "Email", "type": "string", "readOnly": true}, "first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}, "is_staff": {"title": "Staff status", "description": "Designates whether the user can log into this admin site.", "type": "boolean"}}}, "Comment": {"required": ["user", "comment"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"$ref": "#/definitions/User"}, "user_name": {"title": "User's name", "type": "string", "maxLength": 50}, "comment": {"title": "Comment", "type": "string", "maxLength": 3000, "minLength": 1}, "submit_date": {"title": "Date/time submitted", "type": "string", "format": "date-time"}, "is_public": {"title": "Is public", "description": "Uncheck this box to make the comment effectively disappear from the site.", "type": "boolean"}, "is_removed": {"title": "Is removed", "description": "Check this box if the comment is inappropriate. A \"This comment has been removed\" message will be displayed instead.", "type": "boolean"}}}, "PostOutput": {"required": ["title", "content"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"$ref": "#/definitions/User"}, "publish_date": {"title": "Published from", "description": "With Published chosen, won't be shown until this time", "type": "string", "format": "date-time", "x-nullable": true}, "updated": {"title": "Updated", "type": "string", "format": "date-time", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 500, "minLength": 1}, "content": {"title": "Content", "type": "string", "minLength": 1}, "excerpt": {"title": "Excerpt", "type": "string", "readOnly": true}, "slug": {"title": "URL", "description": "Leave blank to have the URL auto-generated from the title.", "type": "string", "maxLength": 2000}, "url": {"title": "Url", "type": "string", "readOnly": true}, "short_url": {"title": "Short url", "type": "string", "readOnly": true}, "categories": {"type": "array", "items": {"$ref": "#/definitions/Category"}, "readOnly": true}, "allow_comments": {"title": "Allow comments", "type": "boolean"}, "comments_count": {"title": "Comments", "type": "integer", "readOnly": true}, "comments": {"type": "array", "items": {"$ref": "#/definitions/Comment"}, "readOnly": true}, "tags": {"title": "Tags", "type": "string", "readOnly": true, "minLength": 1}, "featured_image": {"title": "Featured Image", "type": "string", "x-nullable": true}, "description": {"title": "Description", "type": "string"}}}, "PostCreate": {"required": ["title", "content"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "title": {"title": "Title", "type": "string", "minLength": 1}, "content": {"title": "Content", "type": "string", "minLength": 1}, "categories": {"title": "Categories", "type": "string"}, "status": {"title": "Status", "description": "With Draft chosen, will only be shown for admin users on the site.", "type": "integer", "enum": [1, 2]}, "publish_date": {"title": "Published from", "description": "With Published chosen, won't be shown until this time", "type": "string", "format": "date-time", "x-nullable": true}, "expiry_date": {"title": "Expires on", "description": "With Published chosen, won't be shown after this time", "type": "string", "format": "date-time", "x-nullable": true}, "allow_comments": {"title": "Allow comments", "type": "boolean"}}}, "PostUpdate": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "title": {"title": "Title", "type": "string", "minLength": 1}, "content": {"title": "Content", "type": "string", "minLength": 1}, "categories": {"title": "Categories", "type": "string"}, "status": {"title": "Status", "description": "With Draft chosen, will only be shown for admin users on the site.", "type": "integer", "enum": [1, 2]}, "publish_date": {"title": "Published from", "description": "With Published chosen, won't be shown until this time", "type": "string", "format": "date-time", "x-nullable": true}, "expiry_date": {"title": "Expires on", "description": "With Published chosen, won't be shown after this time", "type": "string", "format": "date-time", "x-nullable": true}, "allow_comments": {"title": "Allow comments", "type": "boolean"}}}, "Site": {"required": ["domain"], "type": "object", "properties": {"title": {"title": "Title", "type": "string", "readOnly": true}, "tagline": {"title": "Tagline", "type": "string", "readOnly": true}, "domain": {"title": "Domain name", "type": "string", "maxLength": 100, "minLength": 1}}}}}