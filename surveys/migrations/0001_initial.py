# Generated by Django 4.0.5 on 2022-06-11 23:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mezzanine.core.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pages', '0008_remove_page__meta_title_af_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_order', mezzanine.core.fields.OrderField(null=True, verbose_name='Order')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('description', mezzanine.core.fields.RichTextField(verbose_name='Description')),
                ('description_en', mezzanine.core.fields.RichTextField(null=True, verbose_name='Description')),
                ('description_pl', mezzanine.core.fields.RichTextField(null=True, verbose_name='Description')),
                ('description_es', mezzanine.core.fields.RichTextField(null=True, verbose_name='Description')),
                ('description_de', mezzanine.core.fields.RichTextField(null=True, verbose_name='Description')),
                ('description_ru', mezzanine.core.fields.RichTextField(null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ('_order',),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_order', mezzanine.core.fields.OrderField(null=True, verbose_name='Order')),
                ('field_type', models.IntegerField(choices=[(1, 'Rating'), (2, 'Text')], verbose_name='Question type')),
                ('prompt', models.CharField(max_length=300, verbose_name='Prompt')),
                ('required', models.BooleanField(default=True, verbose_name='Required')),
                ('invert_rating', models.BooleanField(default=False, verbose_name='Invert rating')),
            ],
            options={
                'verbose_name': 'question',
                'verbose_name_plural': 'questions',
                'ordering': ('_order',),
            },
        ),
        migrations.CreateModel(
            name='SurveyPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.page')),
                ('content', mezzanine.core.fields.RichTextField(verbose_name='Content')),
                ('instructions', mezzanine.core.fields.RichTextField(verbose_name='Instructions')),
                ('instructions_en', mezzanine.core.fields.RichTextField(null=True, verbose_name='Instructions')),
                ('instructions_pl', mezzanine.core.fields.RichTextField(null=True, verbose_name='Instructions')),
                ('instructions_es', mezzanine.core.fields.RichTextField(null=True, verbose_name='Instructions')),
                ('instructions_de', mezzanine.core.fields.RichTextField(null=True, verbose_name='Instructions')),
                ('instructions_ru', mezzanine.core.fields.RichTextField(null=True, verbose_name='Instructions')),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=7, verbose_name='Cost')),
                ('purchase_response', mezzanine.core.fields.RichTextField(verbose_name='Purchase response')),
                ('purchase_response_en', mezzanine.core.fields.RichTextField(null=True, verbose_name='Purchase response')),
                ('purchase_response_pl', mezzanine.core.fields.RichTextField(null=True, verbose_name='Purchase response')),
                ('purchase_response_es', mezzanine.core.fields.RichTextField(null=True, verbose_name='Purchase response')),
                ('purchase_response_de', mezzanine.core.fields.RichTextField(null=True, verbose_name='Purchase response')),
                ('purchase_response_ru', mezzanine.core.fields.RichTextField(null=True, verbose_name='Purchase response')),
                ('completed_message', mezzanine.core.fields.RichTextField(help_text='Message shown to users after completing the survey', verbose_name='Completed message')),
                ('completed_message_en', mezzanine.core.fields.RichTextField(help_text='Message shown to users after completing the survey', null=True, verbose_name='Completed message')),
                ('completed_message_pl', mezzanine.core.fields.RichTextField(help_text='Message shown to users after completing the survey', null=True, verbose_name='Completed message')),
                ('completed_message_es', mezzanine.core.fields.RichTextField(help_text='Message shown to users after completing the survey', null=True, verbose_name='Completed message')),
                ('completed_message_de', mezzanine.core.fields.RichTextField(help_text='Message shown to users after completing the survey', null=True, verbose_name='Completed message')),
                ('completed_message_ru', mezzanine.core.fields.RichTextField(help_text='Message shown to users after completing the survey', null=True, verbose_name='Completed message')),
                ('max_rating', models.PositiveSmallIntegerField(default=5, help_text='For rating questions. Must be a number between 2 and 10', validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(10)], verbose_name='Maximum rating')),
                ('report_explanation', mezzanine.core.fields.RichTextField(help_text="Helping content shown before the results' detail", verbose_name='Explanation')),
                ('report_explanation_en', mezzanine.core.fields.RichTextField(help_text="Helping content shown before the results' detail", null=True, verbose_name='Explanation')),
                ('report_explanation_pl', mezzanine.core.fields.RichTextField(help_text="Helping content shown before the results' detail", null=True, verbose_name='Explanation')),
                ('report_explanation_es', mezzanine.core.fields.RichTextField(help_text="Helping content shown before the results' detail", null=True, verbose_name='Explanation')),
                ('report_explanation_de', mezzanine.core.fields.RichTextField(help_text="Helping content shown before the results' detail", null=True, verbose_name='Explanation')),
                ('report_explanation_ru', mezzanine.core.fields.RichTextField(help_text="Helping content shown before the results' detail", null=True, verbose_name='Explanation')),
            ],
            options={
                'verbose_name': 'survey page',
                'verbose_name_plural': 'survey pages',
                'ordering': ('_order',),
            },
            bases=('pages.page', models.Model),
        ),
        migrations.CreateModel(
            name='SurveyPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('public_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('transaction_id', models.CharField(blank=True, max_length=200, verbose_name='Transaction ID')),
                ('payment_method', models.CharField(blank=True, max_length=100, verbose_name='Payment method')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Amount')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('report_generated', models.DateTimeField(blank=True, null=True, verbose_name='Report generated')),
                ('report_cache', models.TextField(default='[]', verbose_name='Report (cached)')),
                ('purchaser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey_purchases', to=settings.AUTH_USER_MODEL)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='surveys.surveypage')),
            ],
            options={
                'verbose_name': 'purchase',
                'verbose_name_plural': 'purchases',
            },
        ),
        migrations.CreateModel(
            name='SurveyResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='surveys.surveypurchase')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_order', mezzanine.core.fields.OrderField(null=True, verbose_name='Order')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('description', mezzanine.core.fields.RichTextField(verbose_name='Description')),
                ('description_en', mezzanine.core.fields.RichTextField(null=True, verbose_name='Description')),
                ('description_pl', mezzanine.core.fields.RichTextField(null=True, verbose_name='Description')),
                ('description_es', mezzanine.core.fields.RichTextField(null=True, verbose_name='Description')),
                ('description_de', mezzanine.core.fields.RichTextField(null=True, verbose_name='Description')),
                ('description_ru', mezzanine.core.fields.RichTextField(null=True, verbose_name='Description')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='surveys.category')),
            ],
            options={
                'verbose_name': 'subcategory',
                'verbose_name_plural': 'subcategories',
                'ordering': ('_order',),
            },
        ),
        migrations.CreateModel(
            name='QuestionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Rating')),
                ('text_response', models.TextField(blank=True, verbose_name='Text response')),
                ('text_response_en', models.TextField(blank=True, null=True, verbose_name='Text response')),
                ('text_response_pl', models.TextField(blank=True, null=True, verbose_name='Text response')),
                ('text_response_es', models.TextField(blank=True, null=True, verbose_name='Text response')),
                ('text_response_de', models.TextField(blank=True, null=True, verbose_name='Text response')),
                ('text_response_ru', models.TextField(blank=True, null=True, verbose_name='Text response')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='surveys.question')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='surveys.surveyresponse')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='surveys.subcategory'),
        ),
        migrations.AddField(
            model_name='category',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='surveys.surveypage'),
        ),
        migrations.CreateModel(
            name='SurveyPurchaseCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, help_text='If left blank it will be automatically generated', max_length=20, verbose_name='Code')),
                ('uses_remaining', models.PositiveIntegerField(default=0, verbose_name='Remaining uses')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_codes', to='surveys.surveypage')),
            ],
            options={
                'verbose_name': 'purchase code',
                'verbose_name_plural': 'purchase codes',
                'unique_together': {('survey', 'code')},
            },
        ),
    ]
